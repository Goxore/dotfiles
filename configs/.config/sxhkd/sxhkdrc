# main
Print
  maim -s --format=png /dev/stdout | xclip -selection clipboard -t image/png -i

super + s
  rofi -show drun -show-icons

super + shift + x 
  rofi -show power-menu -modi power-menu:/usr/bin/rofi-power-menu

super + v
	bash -c 'amixer -D pulse sset Capture toggle && amixer get Capture | grep "\[off\]" && (dunstctl close && notify-send "MIC switched OFF") || (dunstctl close && notify-send "MIC switched ON")'

super + shift + c
	rofi -no-show-icons -modi 'clipboard:greenclip print' -show clipboard -run-command '{cmd}'

super + shift + q
    $SCRIPTS/launcher/killprocess.sh

super + Delete
	$SCRIPTS/holdwork.sh

super + Insert
	$SCRIPTS/continuework.sh

super + ctrl + e
  $SCRIPTS/other/emoji/emoji.sh arg

super + y
    bash -c "xdotool type @a && xdotool key KP_Enter"

#music
# super + plus
# 	mpc volume +5
#
# super + equal
# 	mpc volume +5
#
# super + minus
# 	mpc volume -5
#
# super + p
# 	mpc toggle
#
# super + bracketright
# 	mpc next
#
# super + bracketleft
# 	mpc prev
#
# XF86AudioPlay
# 	mpc toggle
#     # xdotool click 1
#
# XF86AudioNext
# 	mpc next
#
#YTMusic

# super + p
#     $SCRIPTS/api/ytmusicpost.sh pause
#
# XF86AudioPlay
#     $SCRIPTS/api/ytmusicpost.sh pause
#
# super + bracketright
#     $SCRIPTS/api/ytmusicpost.sh next
#
# super + bracketlefbracketleft
#     $SCRIPTS/api/ytmusicpost.sh previous

XF86AudioNext
    $SCRIPTS/api/ytmusicpost.sh next

#Programs
super + alt + b
	$BROWSER

super + ctrl + b
	blueberry

super + alt + t
  telegram-desktop

super + alt + p
  bitwarden-desktop

# Program key chords 
super + d; {_,super} + f
    firefox

super + d; {_,super} + D
    Discord

super + d; {_,super} + t
    telegram-desktop

super + d; {_,super} + m
    flatpak run app.ytmdesktop.ytmdesktop
    # alacritty -e "ncmpcpp"

super + d; {_,super} + c 
    alacritty -e "qalc"

super + d; {_,super} + e
    $TERMINAL -e $HOME/scripts/general/editconfig.sh

super + d; {_,super} + s
    $TERMINAL -e pulsemixer

super + d; {_,super} + d
	bash $SCRIPTS/fastAccess/fastaccess.sh

super + d; {_,super} + b
    $SCRIPTS/launcher/rofi-bluetooth.sh

super + d; {_,super} + l
    sudo sh -c 'sysctl -w abi.vsyscall32=0' && sudo sysctl -w abi.vsyscall32=0 && lutris

super + d; {_,super} + w
    awesome-client 'require("binding.scratchpads").toggleWiki()'

# BSPWM

# super + {h,j,k,l}
# 	bspc node -f {west,south,north,east}
#
# super + ctrl + {1-9}
#     bspc node -o 0.{1-9}
#
# super + {_,shift + }{1-9,0}
#     bspc {desktop -f,node -d} '^{1-9,10}'
#
# super + Return
#    $TERMINAL
#
# super + q 
#    bspc node -k
#
# super + shift + f 
#    bspc node -t '~floating'
#
# super + t
#    bspc node -t '~tiled'
#
# super + f
#    bspc node -t '~fullscreen'
#
# super + ctrl + s 
#    bspc node -g sticky
#
# ctrl + super + {Left,Down,Up,Right}
#    $SCRIPTS/bspwm/resize.sh {left,down,up,right}
#
# ctrl + super + {h,j,k,l}
#    $SCRIPTS/bspwm/resize.sh {left,down,up,right}
#
# super + shift + {Left,h,Down,j,Up,k,Right,l}
# 	if capsenabled; then step=100; else step=20; fi; \
# 	[ -z "$(bspc query -N -n .focused.floating)" ] && {\
# 		bspc node -s west  || bspc node -v -$step 0, \
# 		bspc node -s west  || bspc node -v -$step 0, \
# 		bspc node -s south || bspc node -v 0 $step,  \
# 		bspc node -s south || bspc node -v 0 $step,  \
# 		bspc node -s north || bspc node -v 0 -$step, \
# 		bspc node -s north || bspc node -v 0 -$step, \
# 		bspc node -s east  || bspc node -v $step  0, \
# 		bspc node -s east  || bspc node -v $step  0  \
# 	}
